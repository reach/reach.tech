(self.webpackChunkreach_ui_website=self.webpackChunkreach_ui_website||[]).push([[77],{1338:function(e,t,n){"use strict";n.r(t),n.d(t,{_frontmatter:function(){return p},default:function(){return u}});var r=n(2265),a=(n(7294),n(4983)),l=n(1255),o=n(2335),i=n(6182),c=["components"],p={},s={_frontmatter:p},d=l.Z;function u(e){var t=e.components,n=(0,r.Z)(e,c);return(0,a.kt)(d,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{title:"Rect",description:"Measures a DOM node's bounding box in React",mdxType:"SEO"}),(0,a.kt)("h1",{id:"rect"},"Rect"),(0,a.kt)(i.Nt,{mdxType:"TOC"},(0,a.kt)(i.B$,{mdxType:"TOCList"},(0,a.kt)(i.G6,{href:"#userect",mdxType:"TOCLink"},"useRect"),(0,a.kt)(i.G6,{href:"#rect-1",mdxType:"TOCLink"},"Rect"))),(0,a.kt)("p",null,"Measures DOM elements (aka. bounding client rect). See also ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"},"Element.getBoundingClientRect()")),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"From the command line in your project directory, run ",(0,a.kt)("inlineCode",{parentName:"p"},"npm install @reach/rect")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn add @reach/rect"),". Then import the component or hook that you need:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @reach/rect\n# or\nyarn add @reach/rect\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import Rect, { useRect } from "@reach/rect";\n')),(0,a.kt)("h2",{id:"component-api"},"Component API"),(0,a.kt)("h3",{id:"userect"},"useRect"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"function useRect<T extends Element>(nodeRef: React.RefObject<T>, options?: { observe?: boolean, onChange?: (rect: DOMRect) => void }): null | DOMRect")),(0,a.kt)("p",null,"Hook that observes and returns the measurements (ClientRect) of a DOM element. Pass it the ref that is placed on the element to be measured."),(0,a.kt)("h4",{id:"userect-options"},"useRect Options"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Option"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#userect-observe"},(0,a.kt)("inlineCode",{parentName:"a"},"observe"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"bool")),(0,a.kt)("td",{parentName:"tr",align:null},"false")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#userect-onchange"},(0,a.kt)("inlineCode",{parentName:"a"},"onChange"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"func")),(0,a.kt)("td",{parentName:"tr",align:null},"false")))),(0,a.kt)("h5",{id:"userect-observe"},"useRect observe"),(0,a.kt)("p",null,"Tells ",(0,a.kt)("inlineCode",{parentName:"p"},"useRect")," whether or not to observe changes to the position of the node. Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("p",null,"This is typically used for elements that pop over other elements. You generally don't need to observe all of the timeâ€”only when the popup is active."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"observe")," is false, the element's ",(0,a.kt)("inlineCode",{parentName:"p"},"DOMRect")," will no longer be observed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'// jsx-demo\nfunction Example() {\n  const [observe, setObserve] = React.useState(true);\n  // your own ref\n  const ref = React.useRef();\n\n  // pass it in to be observered\n  const rect = useRect(ref, { observe });\n\n  return (\n    <div>\n      <button onClick={() => setObserve(!observe)}>\n        {observe ? "Stop" : "Start"} observing\n      </button>\n      <pre>{JSON.stringify(rect, null, 2)}</pre>\n      <div\n        // and then place the ref\n        ref={ref}\n        contentEditable\n        style={{\n          display: "inline-block",\n          padding: 10,\n          border: "solid 1px",\n        }}\n        dangerouslySetInnerHTML={{\n          __html: "Edit this to change the size!",\n        }}\n      />\n    </div>\n  );\n}\n')),(0,a.kt)("h5",{id:"userect-onchange"},"useRect onChange"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"onChange?(rect: DOMRect): void")),(0,a.kt)("p",null,"Calls back whenever the ",(0,a.kt)("inlineCode",{parentName:"p"},"rect")," of the element changes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  const ref = React.useRef();\n  useRect(ref, {\n    onChange(rect) {\n      console.log(rect);\n    },\n  });\n  return <div ref={ref} />;\n}\n")),(0,a.kt)("h3",{id:"rect-1"},"Rect"),(0,a.kt)("p",null,"Render prop component for use in class components to observe element measurements."),(0,a.kt)("h4",{id:"rect-props"},"Rect Props"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Prop"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#rect-children"},(0,a.kt)("inlineCode",{parentName:"a"},"children"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"func")),(0,a.kt)("td",{parentName:"tr",align:null},"true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#rect-observe"},(0,a.kt)("inlineCode",{parentName:"a"},"observe"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"bool")),(0,a.kt)("td",{parentName:"tr",align:null},"false")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#rect-onchange"},(0,a.kt)("inlineCode",{parentName:"a"},"onChange"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"func")),(0,a.kt)("td",{parentName:"tr",align:null},"false")))),(0,a.kt)("h5",{id:"rect-children"},"Rect children"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"children(args: { rect: DOMRect | null; ref: React.Ref<any> }): JSX.Element")),(0,a.kt)("p",null,"A function that calls back to you with a ",(0,a.kt)("inlineCode",{parentName:"p"},"ref")," to place on an element and the ",(0,a.kt)("inlineCode",{parentName:"p"},"rect")," measurements of the dom node."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": On the first render ",(0,a.kt)("inlineCode",{parentName:"p"},"rect")," will be ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," because we can't measure a node that has not yet been rendered. Make sure your code accounts for this."),(0,a.kt)("h5",{id:"rect-observe"},"Rect observe"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"observe?: boolean")),(0,a.kt)("p",null,"Same as ",(0,a.kt)("a",{parentName:"p",href:"#userect-observe"},(0,a.kt)("inlineCode",{parentName:"a"},"useRect"),"'s ",(0,a.kt)("inlineCode",{parentName:"a"},"observe")," option"),". While observing, the ",(0,a.kt)("inlineCode",{parentName:"p"},"children")," render prop may call back very quickly (especially while scrolling), so it can be important for performance to avoid observing when you don't need to. Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"<Rect observe={false}>\n  {({ rect, ref }) => (\n    <div ref={ref}>\n      <div>Will not measure the element when false</div>\n      <div>\n        Edit this code and change it to <code>true</code>\n      </div>\n      <pre>{JSON.stringify(rect, null, 2)}</pre>\n    </div>\n  )}\n</Rect>\n")),(0,a.kt)("h5",{id:"rect-onchange"},"Rect onChange"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"onChange?(rect: DOMRect): void")),(0,a.kt)("p",null,"Same as ",(0,a.kt)("a",{parentName:"p",href:"#userect-onchange"},(0,a.kt)("inlineCode",{parentName:"a"},"useRect"),"'s ",(0,a.kt)("inlineCode",{parentName:"a"},"onChange")," option"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"<Rect onChange={rect => console.log(rect)}/>\n  {({ rect, ref }) => (\n    <div ref={ref}/>\n  )}\n</Rect>\n")))}u.isMDXComponent=!0},6182:function(e,t,n){"use strict";n.d(t,{Nt:function(){return u},B$:function(){return m},G6:function(){return k}});var r=n(5167),a=n(2265),l=n(7294),o=n(9042),i=["children","label"],c=["children","style"],p=["href","children"];function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e){var t=e.children,n=e.label,r=void 0===n?"Table of Contents":n,c=(0,a.Z)(e,i);return l.createElement("nav",Object.assign({className:"toc"},c),l.createElement(o.Z,null,l.createElement("h2",null,r)),t)}function m(e){var t=e.children,n=e.style,r=void 0===n?{}:n,o=(0,a.Z)(e,c);return l.createElement("ul",Object.assign({style:d({display:"block",padding:0,listStyle:"none"},r)},o),t)}function k(e){var t=e.href,n=e.children,r=(0,a.Z)(e,p);return l.createElement("li",{style:{display:"inline-block",margin:0,padding:0}},l.createElement("a",Object.assign({href:t},r),n))}}}]);
//# sourceMappingURL=component---src-pages-rect-mdx-48a4fd7b14bfe446f231.js.map
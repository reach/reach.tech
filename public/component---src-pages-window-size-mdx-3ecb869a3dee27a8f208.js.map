{"version":3,"sources":["webpack:///./src/pages/window-size.mdx","webpack:///./src/components/TOC.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","description","href","parentName","isMDXComponent","TOC","children","label","className","TOCList","style","display","padding","listStyle","TOCLink","margin"],"mappings":"oQAUaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAKC,MAAM,cAAcC,YAAY,iDAAiDF,QAAQ,QAC9F,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAKA,QAAQ,OACf,YAAC,IAAD,CAASA,QAAQ,WACf,YAAC,IAAD,CAASG,KAAK,iBAAiBH,QAAQ,WAAvC,iBACA,YAAC,IAAD,CAASG,KAAK,cAAcH,QAAQ,WAApC,gBAGA,+DACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,6EAA4D,0BAAYI,WAAW,KAAvB,kCAA5D,OAA8I,0BAAYA,WAAW,KAAvB,+BAA9I,sDACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wEAML,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,sEAIL,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2PAgBL,iBAAQ,CACN,GAAM,oBADR,oBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,+BAAGA,WAAW,MAAS,CACtB,KAAQ,cACP,0BAAYA,WAAW,KAAvB,cACL,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,SACH,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAMN,iBAAQ,CACN,GAAM,uBADR,uBAGA,qBAAG,0BAAYA,WAAW,KAAvB,wFACH,gFACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,iGACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gPAaL,iBAAQ,CACN,GAAM,2BADR,2BAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,4EAWTP,EAAWQ,gBAAiB,G,qwBCxIrB,SAASC,EAAT,GAAmE,IAApDC,EAAmD,EAAnDA,SAAmD,IAAzCC,aAAyC,MAAjC,oBAAiC,EAATT,EAAS,oCACvE,OACE,qCAAKU,UAAU,OAAUV,GACvB,gBAAC,IAAD,KACE,0BAAKS,IAEND,GAKA,SAASG,EAAT,GAAsD,IAAnCH,EAAkC,EAAlCA,SAAkC,IAAxBI,aAAwB,MAAhB,GAAgB,EAATZ,EAAS,oCAC1D,OACE,oCACEY,MAAK,GACHC,QAAS,QACTC,QAAS,EACTC,UAAW,QACRH,IAEDZ,GAEHQ,GAKA,SAASQ,EAAT,GAAgD,IAA7BZ,EAA4B,EAA5BA,KAAMI,EAAsB,EAAtBA,SAAaR,EAAS,mCACpD,OACE,sBAAIY,MAAO,CAAEC,QAAS,eAAgBI,OAAQ,EAAGH,QAAS,IACxD,mCAAGV,KAAMA,GAAUJ,GAChBQ","file":"component---src-pages-window-size-mdx-3ecb869a3dee27a8f208.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/reach/reach-ui/website/src/components/mdx-layout.js\";\nimport SEO from \"../components/SEO\";\nimport { TOC, TOCList, TOCLink } from \"../components/TOC\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <SEO title=\"Window Size\" description=\"Measure the current window dimensions in React\" mdxType=\"SEO\" />\n    <h1 {...{\n      \"id\": \"window-size\"\n    }}>{`Window Size`}</h1>\n    <TOC mdxType=\"TOC\">\n  <TOCList mdxType=\"TOCList\">\n    <TOCLink href=\"#usewindowsize\" mdxType=\"TOCLink\">useWindowSize</TOCLink>\n    <TOCLink href=\"#windowsize\" mdxType=\"TOCLink\">WindowSize</TOCLink>\n  </TOCList>\n    </TOC>\n    <p>{`Measure the current window dimensions.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`From the command line in your project directory, run `}<inlineCode parentName=\"p\">{`npm install @reach/window-size`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn add @reach/window-size`}</inlineCode>{`. Then import the component or hook that you need:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @reach/window-size\n# or\nyarn add @reach/window-size\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import WindowSize, { useWindowSize } from \"@reach/window-size\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-api\"\n    }}>{`Component API`}</h2>\n    <h3 {...{\n      \"id\": \"windowsize\"\n    }}>{`WindowSize`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  return (\n    <WindowSize>\n      {(size) => (\n        <div>\n          <p>Resize your window.</p>\n          <pre>{JSON.stringify(size, null, 2)}</pre>\n        </div>\n      )}\n    </WindowSize>\n  );\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"windowsize-props\"\n    }}>{`WindowSize Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"windowsize-children\"\n    }}>{`WindowSize children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: (size: { width: number; height: number }) => React.ReactElement<any, any>`}</inlineCode></p>\n    <p>{`A function that calls back to you with the window size.`}</p>\n    <h3 {...{\n      \"id\": \"usewindowsize\"\n    }}>{`useWindowSize`}</h3>\n    <p>{`A hook that observes and returns the measurements of the browser window.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  const { width, height } = useWindowSize();\n  return (\n    <div>\n      <p>Resize your window.</p>\n      <pre>Window size: {JSON.stringify({ width, height }, null, 2)}</pre>\n    </div>\n  );\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"usewindowsize-signature\"\n    }}>{`useWindowSize signature`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`function useWindowSize(): {\n  width: number;\n  height: number;\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport function TOC({ children, label = \"Table of Contents\", ...props }) {\n  return (\n    <nav className=\"toc\" {...props}>\n      <VisuallyHidden>\n        <h2>{label}</h2>\n      </VisuallyHidden>\n      {children}\n    </nav>\n  );\n}\n\nexport function TOCList({ children, style = {}, ...props }) {\n  return (\n    <ul\n      style={{\n        display: \"block\",\n        padding: 0,\n        listStyle: \"none\",\n        ...style,\n      }}\n      {...props}\n    >\n      {children}\n    </ul>\n  );\n}\n\nexport function TOCLink({ href, children, ...props }) {\n  return (\n    <li style={{ display: \"inline-block\", margin: 0, padding: 0 }}>\n      <a href={href} {...props}>\n        {children}\n      </a>\n    </li>\n  );\n}\n"],"sourceRoot":""}
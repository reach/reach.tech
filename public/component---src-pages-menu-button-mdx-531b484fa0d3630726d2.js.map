{"version":3,"sources":["webpack:///./src/pages/menu-button.mdx","webpack:///./src/components/TOC.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","description","href","parentName","isMDXComponent","TOC","children","label","className","TOCList","style","display","padding","listStyle","TOCLink","margin"],"mappings":"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","file":"component---src-pages-menu-button-mdx-531b484fa0d3630726d2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/reach/reach-ui/website/src/components/mdx-layout.js\";\nimport SEO from \"../components/SEO\";\nimport { TOC, TOCList, TOCLink } from \"../components/TOC\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <SEO title=\"Menu Button\" description=\"An accessible component for the common dropdown menu button design pattern in React\" mdxType=\"SEO\" />\n    <h1 {...{\n      \"id\": \"menu-button\"\n    }}>{`Menu Button`}</h1>\n    <TOC mdxType=\"TOC\">\n  <TOCList mdxType=\"TOCList\">\n    <TOCLink href=\"#menu\" mdxType=\"TOCLink\">Menu</TOCLink>\n    <TOCLink href=\"#menubutton\" mdxType=\"TOCLink\">MenuButton</TOCLink>\n    <TOCLink href=\"#menulist\" mdxType=\"TOCLink\">MenuList</TOCLink>\n    <TOCLink href=\"#menupopover\" mdxType=\"TOCLink\">MenuPopover</TOCLink>\n    <TOCLink href=\"#menuitems\" mdxType=\"TOCLink\">MenuItems</TOCLink>\n    <TOCLink href=\"#menuitem\" mdxType=\"TOCLink\">MenuItem</TOCLink>\n    <TOCLink href=\"#menulink\" mdxType=\"TOCLink\">MenuLink</TOCLink>\n    <TOCLink href=\"#usemenubuttoncontext\" mdxType=\"TOCLink\">useMenuButtonContext</TOCLink>\n  </TOCList>\n    </TOC>\n    <ul>\n      <li parentName=\"ul\">{`Source: `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/reach/reach-ui/tree/main/packages/menu-button\"\n        }}>{`https://github.com/reach/reach-ui/tree/main/packages/menu-button`}</a></li>\n      <li parentName=\"ul\">{`WAI-ARIA: `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\"\n        }}>{`https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton`}</a></li>\n    </ul>\n    <p>{`An accessible dropdown menu for the common dropdown menu button design pattern.`}</p>\n    <p>{`Please note that the buttons on this page are styled by this website. They are just buttons, so they will appear the same as any other button in your app.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  return (\n    <Menu>\n      <MenuButton>\n        Actions <span aria-hidden>▾</span>\n      </MenuButton>\n      <MenuList>\n        <MenuItem onSelect={() => alert(\"Download\")}>Download</MenuItem>\n        <MenuItem onSelect={() => alert(\"Copy\")}>Create a Copy</MenuItem>\n        <MenuItem onSelect={() => alert(\"Mark as Draft\")}>\n          Mark as Draft\n        </MenuItem>\n        <MenuItem onSelect={() => alert(\"Delete\")}>Delete</MenuItem>\n        <MenuLink as=\"a\" href=\"https://reacttraining.com/workshops/\">\n          Attend a Workshop\n        </MenuLink>\n      </MenuList>\n    </Menu>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`From the command line in your project directory, run `}<inlineCode parentName=\"p\">{`npm install @reach/menu-button`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn add @reach/menu-button`}</inlineCode>{`. Then import the components and styles that you need:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @reach/menu-button\n# or\nyarn add @reach/menu-button\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n  MenuItems,\n  MenuPopover,\n  MenuLink,\n} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-api\"\n    }}>{`Component API`}</h2>\n    <h3 {...{\n      \"id\": \"menu\"\n    }}>{`Menu`}</h3>\n    <p>{`The wrapper component for the other components. No DOM element is rendered.`}</p>\n    <h4 {...{\n      \"id\": \"menu-props\"\n    }}>{`Menu Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menu-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"menu-children\"\n    }}>{`Menu children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode | ((props: { isExpanded: boolean }) => React.ReactNode)`}</inlineCode></p>\n    <p>{`Requires two children: a `}<inlineCode parentName=\"p\">{`MenuButton`}</inlineCode>{` and a `}<inlineCode parentName=\"p\">{`MenuList`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  return (\n    <Menu>\n      <MenuButton>Actions</MenuButton>\n      <MenuList>\n        <MenuItem>Download</MenuItem>\n        <MenuLink to=\"view\">View</MenuLink>\n      </MenuList>\n    </Menu>\n  );\n}\n`}</code></pre>\n    <p>{`Alternatively, you can provide a render callback. This is helpful if you need to access the internal state of the Menu.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  return (\n    <Menu>\n      {({ isExpanded }) => (\n        <React.Fragment>\n          <MenuButton>\n            {isExpanded ? \"Close\" : \"Open\"} <span aria-hidden=\"true\">▾</span>\n          </MenuButton>\n          <MenuList>\n            <MenuItem>Download</MenuItem>\n            <MenuItem>Create a Copy</MenuItem>\n          </MenuList>\n        </React.Fragment>\n      )}\n    </Menu>\n  );\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"menubutton\"\n    }}>{`MenuButton`}</h3>\n    <p>{`Wraps a DOM `}<inlineCode parentName=\"p\">{`button`}</inlineCode>{` that toggles the opening and closing of the dropdown menu. Must be rendered inside of a `}<inlineCode parentName=\"p\">{`<Menu>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Menu>\n  <MenuButton>Profile</MenuButton>\n  {/* ... */}\n</Menu>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menubutton-css-selectors\"\n    }}>{`MenuButton CSS Selectors`}</h4>\n    <p>{`Please see the `}<a parentName=\"p\" {...{\n        \"href\": \"/styling\"\n      }}>{`styling guide`}</a>{`.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`<MenuButton>`}</inlineCode>{` wraps a normal `}<inlineCode parentName=\"p\">{`<button>`}</inlineCode>{` and no styles are applied to it, so any global button styles you have will be applied.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`button {\n  /* your normal button styles will be applied */\n}\n`}</code></pre>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`[data-reach-menu-button]`}</inlineCode>{` selector to style only the dropdown buttons:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-button] {\n  color: blue;\n}\n`}</code></pre>\n    <p>{`If you'd like to target when the menu is open use `}<inlineCode parentName=\"p\">{`aria-expanded`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-button][aria-expanded=\"true\"] {\n  background: #000;\n  color: white;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menubutton-props\"\n    }}>{`MenuButton Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menubutton-button-props\"\n            }}><inlineCode parentName=\"a\">{`button`}</inlineCode>{` props`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menubutton-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onMouseDown`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`preventableEventFunc`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onKeyDown`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`preventableEventFunc`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"menubutton-button-props\"\n    }}>{`MenuButton button props`}</h5>\n    <p>{`Any props not listed above will be spread onto the underlying button element. You can treat it like any other button in your app for styling.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Menu>\n  <MenuButton\n    className=\"button-primary\"\n    style={{ boxShadow: \"2px 2px 2px hsla(0, 0%, 0%, 0.25)\" }}\n  >\n    Actions <span aria-hidden>▾</span>\n  </MenuButton>\n  <MenuList>\n    <MenuItem onSelect={() => {}}>Do nothing</MenuItem>\n  </MenuList>\n</Menu>\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menubutton-as\"\n    }}>{`MenuButton as`}</h5>\n    <p><inlineCode parentName=\"p\">{`as?: keyof JSX.IntrinsicElements | React.ComponentType`}</inlineCode></p>\n    <p>{`A string representing an HTML element or a React component that will tell the `}<inlineCode parentName=\"p\">{`MenuButton`}</inlineCode>{` what underlying element to render. Defaults to `}<inlineCode parentName=\"p\">{`button`}</inlineCode>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE:`}</strong>{` Many semantic elements, such as `}<inlineCode parentName=\"p\">{`button`}</inlineCode>{` elements, have meaning to assistive devices and browsers that provide context for the user and, in many cases, provide or restrict interactive behaviors. Use caution when overriding our defaults and make sure that the element you choose to render provides the same experience for all users. While this prop is useful for passing custom implementations, such as styled or design-system components, using anything that renders the wrong semantic HTML element will require stubbing specific behaviors and attributes. This is highly discouraged.`}</p>\n    </blockquote>\n    <h5 {...{\n      \"id\": \"menubutton-children\"\n    }}>{`MenuButton children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode`}</inlineCode></p>\n    <p>{`Accepts any renderable content.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<MenuButton>\n  Actions{\" \"}\n  <span aria-hidden>\n    <Gear />\n  </span>\n</MenuButton>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"menulist\"\n    }}>{`MenuList`}</h3>\n    <p>{`Wraps a DOM element that renders the menu items. Must be rendered inside of a `}<inlineCode parentName=\"p\">{`<Menu>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Menu>\n  {/* ... */}\n  <MenuList>\n    <MenuItem onSelect={() => {}}>Download</MenuItem>\n  </MenuList>\n</Menu>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menulist-css-selectors\"\n    }}>{`MenuList CSS Selectors`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-list] {\n  padding: 20px 10px;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menulist-props\"\n    }}>{`MenuList Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menuitems-div-props\"\n            }}><inlineCode parentName=\"a\">{`div`}</inlineCode>{` props`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menuitems-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menuitems-portal\"\n            }}><inlineCode parentName=\"a\">{`portal`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"menulist-div-props\"\n    }}>{`MenuList div props`}</h5>\n    <p>{`All props are spread to the underlying element. Here we apply a `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` the element.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  return (\n    <Menu>\n      <MenuButton>\n        Actions <span aria-hidden>▾</span>\n      </MenuButton>\n      <MenuList className=\"slide-down\">\n        <MenuItem onSelect={() => {}}>Start Video</MenuItem>\n        <MenuItem onSelect={() => {}}>Start Screenshare</MenuItem>\n        <MenuItem onSelect={() => {}}>Send a Message</MenuItem>\n      </MenuList>\n    </Menu>\n  );\n}\n`}</code></pre>\n    <p>{`The stylesheet contains these rules to create the animation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@keyframes slide-down {\n  0% {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.slide-down[data-reach-menu-list],\n.slide-down[data-reach-menu-items] {\n  border-radius: 5px;\n  animation: slide-down 0.2s ease;\n}\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menulist-children\"\n    }}>{`MenuList children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode`}</inlineCode></p>\n    <p>{`Can contain only `}<inlineCode parentName=\"p\">{`MenuItem`}</inlineCode>{` or a `}<inlineCode parentName=\"p\">{`MenuLink`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<MenuList>\n  <MenuItem />\n  <MenuLink />\n</MenuList>\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menulist-portal\"\n    }}>{`MenuList portal`}</h5>\n    <p><inlineCode parentName=\"p\">{`portal?: boolean`}</inlineCode></p>\n    <p>{`Whether or not the popover should be rendered inside a portal. Defaults to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"menupopover\"\n    }}>{`MenuPopover`}</h3>\n    <p>{`A low-level wrapper for the popover that appears when a menu button is open. You can compose it with `}<inlineCode parentName=\"p\">{`MenuItems`}</inlineCode>{` for more control over the nested components and their rendered DOM nodes, or if you need to nest arbitrary components between the outer wrapper and your list.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Menu>\n  {/* ... */}\n  <MenuPopover>\n    <div className=\"arbitrary-element\">\n      <MenuItems>\n        <MenuItem onSelect={() => {}}>Download</MenuItem>\n      </MenuItems>\n    </div>\n  </MenuPopover>\n</Menu>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menupopover-css-selectors\"\n    }}>{`MenuPopover CSS Selectors`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-popover] {\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menupopover-props\"\n    }}>{`MenuPopover Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menupopover-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menupopover-portal\"\n            }}><inlineCode parentName=\"a\">{`portal`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menupopover-position\"\n            }}><inlineCode parentName=\"a\">{`position`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"menupopover-children-props\"\n    }}>{`MenuPopover children props`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode`}</inlineCode></p>\n    <h5 {...{\n      \"id\": \"menupopover-portal\"\n    }}>{`MenuPopover portal`}</h5>\n    <p><inlineCode parentName=\"p\">{`portal?: boolean`}</inlineCode></p>\n    <p>{`Whether or not the popover should be rendered inside a portal. Defaults to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`.`}</p>\n    <h5 {...{\n      \"id\": \"menupopover-position\"\n    }}>{`MenuPopover position`}</h5>\n    <p><inlineCode parentName=\"p\">{`position?: (targetRect?: DOMRect | null, popoverRect?: DOMRect | null) => React.CSSProperties`}</inlineCode></p>\n    <p>{`A function used to determine the position of the popover in relation to the menu button. By default, the menu button will attempt to position the popover below the button aligned with its left edge. If this positioning results in collisions with any side of the window, the popover will be anchored to a different side to avoid those collisions if possible.`}</p>\n    <p>{`The function accepts the DOMRect of the menu button element, and the DOMRect of the popover element as arguments, and returns a CSS properties object that is then applied to the popover as inline styles.`}</p>\n    <h3 {...{\n      \"id\": \"menuitems\"\n    }}>{`MenuItems`}</h3>\n    <p>{`A low-level wrapper for menu items. Compose it with `}<inlineCode parentName=\"p\">{`MenuPopover`}</inlineCode>{` for more control over the nested components and their rendered DOM nodes, or if you need to nest arbitrary components between the outer wrapper and your list.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#menupopover\"\n      }}><inlineCode parentName=\"a\">{`MenuPopover`}</inlineCode></a>{` for details.`}</p>\n    <h4 {...{\n      \"id\": \"menuitems-css-selectors\"\n    }}>{`MenuItems CSS Selectors`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-items] {\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"menuitem\"\n    }}>{`MenuItem`}</h3>\n    <p>{`Handles menu selection. Must be a direct child of a `}<inlineCode parentName=\"p\">{`<MenuList>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<MenuList>\n  <MenuItem onSelect={() => alert(\"download!\")}>Download</MenuItem>\n</MenuList>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menuitem-css-selectors\"\n    }}>{`MenuItem CSS Selectors`}</h4>\n    <p>{`Please see the `}<a parentName=\"p\" {...{\n        \"href\": \"/styling\"\n      }}>{`styling guide`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-item] {\n  padding: 20px 10px;\n}\n`}</code></pre>\n    <p>{`To change the styles of a highlighted menu item, use this pseudo-pseudo selector:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-item][data-selected] {\n  background: red;\n}\n`}</code></pre>\n    <p>{`The following example has this css applied:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.red-highlight[data-reach-menu-item][data-selected] {\n  background: red;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  return (\n    <Menu>\n      <MenuButton>\n        Actions <span aria-hidden>▾</span>\n      </MenuButton>\n      <MenuList>\n        <MenuItem className=\"red-highlight\" onSelect={() => {}}>\n          Start Video\n        </MenuItem>\n        <MenuItem className=\"red-highlight\" onSelect={() => {}}>\n          Start Screenshare\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  );\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menuitem-props\"\n    }}>{`MenuItem Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menuitem-element-props\"\n            }}>{`element props`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menuitem-as\"\n            }}><inlineCode parentName=\"a\">{`as`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`Component`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menuitem-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menuitem-disabled\"\n            }}><inlineCode parentName=\"a\">{`disabled`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menuitem-onselect\"\n            }}><inlineCode parentName=\"a\">{`onSelect`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"menuitem-element-props\"\n    }}>{`MenuItem element props`}</h5>\n    <p>{`All props are spread to the underlying element.`}</p>\n    <p>{`In this example the `}<inlineCode parentName=\"p\">{`onFocus`}</inlineCode>{` prop is passed down to the element.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example(props) {\n  const [focusCount, setFocusCount] = React.useState(0);\n  return (\n    <Menu>\n      <MenuButton>Actions</MenuButton>\n      <MenuList>\n        <MenuItem\n          onFocus={() => {\n            setFocusCount((prevFocusCount) => prevFocusCount + 1);\n          }}\n          onSelect={() => {}}\n        >\n          Focused {focusCount} Times\n        </MenuItem>\n        <MenuItem onSelect={() => {}}>Start Screenshare</MenuItem>\n        <MenuItem onSelect={() => {}}>Send a Message</MenuItem>\n      </MenuList>\n    </Menu>\n  );\n}\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menuitem-as\"\n    }}>{`MenuItem as`}</h5>\n    <p><inlineCode parentName=\"p\">{`as?: keyof JSX.IntrinsicElements | React.ComponentType`}</inlineCode></p>\n    <p>{`A string representing an HTML element or a React component that will tell the `}<inlineCode parentName=\"p\">{`MenuItem`}</inlineCode>{` what underlying element to render. Defaults to `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`.`}</p>\n    <p>{`You can pass another element or use this prop to render a styled component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const StyledItem = styled.div\\`\n  &[data-selected] {\n    background: palevioletred;\n  }\n\\`;\n\nfunction Example() {\n  return (\n    <Menu>\n      <MenuButton id=\"example-button\">\n        Actions <span aria-hidden=\"true\">▾</span>\n      </MenuButton>\n      <MenuList>\n        <MenuItem as={StyledItem} onSelect={action(\"Download\")}>\n          Download\n        </MenuItem>\n        <MenuItem as={StyledItem} onSelect={action(\"Copy\")}>\n          Create a Copy\n        </MenuItem>\n        <MenuItem as={StyledItem} onSelect={action(\"Mark as Draft\")}>\n          Mark as Draft\n        </MenuItem>\n        <MenuItem as={StyledItem} onSelect={action(\"Delete\")}>\n          Delete\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  );\n}\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menuitem-children\"\n    }}>{`MenuItem children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode`}</inlineCode></p>\n    <p>{`You can put any type of content inside of a `}<inlineCode parentName=\"p\">{`<MenuItem>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example(props) {\n  return (\n    <Menu>\n      <MenuButton>\n        Your Cats <span aria-hidden>▾</span>\n      </MenuButton>\n      <MenuList className=\"kittys\">\n        <MenuItem onSelect={() => {}}>\n          <img\n            src=\"https://placekitten.com/100/100\"\n            alt=\"Fluffybuns the destroyer\"\n          />\n          <span>Fluffybuns the Destroyer</span>\n        </MenuItem>\n        <MenuItem onSelect={() => {}}>\n          <img src=\"https://placekitten.com/120/120\" alt=\"Simon the pensive\" />\n          <span>Simon the pensive</span>\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  );\n}\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menuitem-disabled\"\n    }}>{`MenuItem disabled`}</h5>\n    <p><inlineCode parentName=\"p\">{`disabled?: boolean`}</inlineCode></p>\n    <p>{`Whether or not the item is disabled from selection and navigation.`}</p>\n    <h5 {...{\n      \"id\": \"menuitem-onselect\"\n    }}>{`MenuItem onSelect`}</h5>\n    <p><inlineCode parentName=\"p\">{`onSelect(): void`}</inlineCode></p>\n    <p>{`Callback that fires when a `}<inlineCode parentName=\"p\">{`MenuItem`}</inlineCode>{` is selected.`}</p>\n    <h3 {...{\n      \"id\": \"menulink\"\n    }}>{`MenuLink`}</h3>\n    <p>{`Handles linking to a different page in the menu. By default it renders `}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{`, but also accepts any other kind of Link as long as the `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{` uses the `}<inlineCode parentName=\"p\">{`React.forwardRef`}</inlineCode>{` API.`}</p>\n    <p>{`Must be a direct child of a `}<inlineCode parentName=\"p\">{`<MenuList>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Link } from \"@reach/router\";\n<MenuList>\n  <MenuLink as={Link} to=\"somewhere/else\">\n    Somewhere w/ Reach Router\n  </MenuLink>\n  <MenuLink href=\"https://reactjs.org\">Official React Site</MenuLink>\n  <MenuLink as={GatsbyLink} to=\"/somewhere/with/gatsby\">\n    Some Gatsby Page\n  </MenuLink>\n</MenuList>;\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menulink-css-selectors\"\n    }}>{`MenuLink CSS Selectors`}</h4>\n    <p>{`Please see the `}<a parentName=\"p\" {...{\n        \"href\": \"/styling\"\n      }}>{`styling guide`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-item] {\n  padding: 20px 10px;\n}\n`}</code></pre>\n    <p>{`To change the styles of a highlighted menu item, use this pseudo-pseudo selector:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-menu-item][data-selected] {\n  background: red;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"menulink-props\"\n    }}>{`MenuLink Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menulink-element-props\"\n            }}>{`element props`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menulink-as\"\n            }}><inlineCode parentName=\"a\">{`as`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`Component`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menulink-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menulink-disabled\"\n            }}><inlineCode parentName=\"a\">{`disabled`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#menulink-onselect\"\n            }}><inlineCode parentName=\"a\">{`onSelect`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"menulink-element-props\"\n    }}>{`MenuLink element props`}</h5>\n    <p>{`All props are spread to the underlying element`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// the \\`to\\` prop is spread onto the Reach Router Link\n<MenuLink as={Link} to=\"somewhere/else\">\n  Somewhere\n</MenuLink>\n\n// the \\`href\\` prop is spread onto the underlying \\`a\\`\n<MenuLink href=\"https://reactjs.org\">Official React Site</MenuLink>\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menulink-as\"\n    }}>{`MenuLink as`}</h5>\n    <p><inlineCode parentName=\"p\">{`as?: keyof JSX.IntrinsicElements | React.ComponentType`}</inlineCode></p>\n    <p>{`A string representing an HTML element or a React component that will tell the `}<inlineCode parentName=\"p\">{`MenuLink`}</inlineCode>{` what underlying element to render. Defaults to `}<inlineCode parentName=\"p\">{`a`}</inlineCode>{`.`}</p>\n    <p>{`While `}<inlineCode parentName=\"p\">{`MenuLink`}</inlineCode>{` should always render an HTML anchor tag, this is useful to pass a styled component or if you are using a router and need to use its `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Link } from \"react-router\";\n<Menu>\n  <MenuButton>Products</MenuButton>\n  <MenuList>\n    <MenuLink as={Link} to=\"/settings\">\n      Settings\n    </MenuLink>\n    <MenuLink href=\"https://reacttraining.com/workshops\">Workshops</MenuLink>\n    <MenuLink href=\"https://reacttraining.com/courses\">Online Courses</MenuLink>\n  </MenuList>\n</Menu>;\n`}</code></pre>\n    <p>{`Additionally, if other routers' `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{` component uses the `}<inlineCode parentName=\"p\">{`React.forwardRef`}</inlineCode>{` API, you can pass them in as well. If they don’t it won't work because we will not be able to manage focus on the element the component renders.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Link } from \"gatsby\";\n<MenuLink as={GatsbyLink} to=\"/somewhere\" />;\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menulink-children\"\n    }}>{`MenuLink children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode`}</inlineCode></p>\n    <p>{`You can render any kind of content inside of a MenuLink.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<MenuLink>\n  <ProfileImage userId=\"4\" />\n  <UserName>Ryan Florence</UserName>\n</MenuLink>\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"menulink-disabled\"\n    }}>{`MenuLink disabled`}</h5>\n    <p><inlineCode parentName=\"p\">{`disabled?: boolean`}</inlineCode></p>\n    <p>{`Whether or not the link is disabled from selection and navigation.`}</p>\n    <h5 {...{\n      \"id\": \"menulink-onselect\"\n    }}>{`MenuLink onSelect`}</h5>\n    <p><inlineCode parentName=\"p\">{`onSelect?(): void`}</inlineCode></p>\n    <p>{`Callback that fires when a `}<inlineCode parentName=\"p\">{`MenuLink`}</inlineCode>{` is selected.`}</p>\n    <h3 {...{\n      \"id\": \"usemenubuttoncontext\"\n    }}>{`useMenuButtonContext`}</h3>\n    <p><inlineCode parentName=\"p\">{`function useMenuButtonContext(): { isExpanded: boolean }`}</inlineCode></p>\n    <p>{`A hook that exposes data for a given `}<inlineCode parentName=\"p\">{`Menu`}</inlineCode>{` component to its descendants.`}</p>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`Notes`}</h2>\n    <h3 {...{\n      \"id\": \"unmounting-the-menu-after-an-action\"\n    }}>{`Unmounting the Menu after an action`}</h3>\n    <p>{`If one of your menu items causes the `}<inlineCode parentName=\"p\">{`<Menu>`}</inlineCode>{` itself to unmount, it is your job to move focus to the changed content. One exception to this is if you're using `}<inlineCode parentName=\"p\">{`MenuLink`}</inlineCode>{` and Reach Router. In this case, the router will handle focus for you.`}</p>\n    <p>{`Note the callbacks given to `}<inlineCode parentName=\"p\">{`setState`}</inlineCode>{` in the following demo app where focus is managed between screens. If you don't do this you'll drop keyboard and screen reader users off at the top of the document. It'll then be hard for them to know what changed and how to find it. Moving focus helps them stay where you want them the very same way visual design does.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function Example(props) {\n  const screen1FocusRef = React.useRef();\n  const screen2ButtonFocusRef = React.useRef();\n  React.useEffect(() => {\n    requestAnimationFrame(() => {\n      if (screen === 1) {\n        screen1FocusRef.current.focus();\n      }\n      if (screen === 2) {\n        screen2ButtonFocusRef.current.focus();\n      }\n    });\n  }, [screen]);\n\n  const [screen, setScreen] = React.useState(1);\n  if (screen === 1) {\n    return (\n      <div ref={screen1FocusRef} tabIndex=\"-1\">\n        <h4>Screen One</h4>\n        <Menu>\n          <MenuButton>Actions</MenuButton>\n          <MenuList>\n            <MenuItem onSelect={() => setScreen(2)}>Go to screen 2</MenuItem>\n            <MenuItem onSelect={() => {}}>Do nothing</MenuItem>\n          </MenuList>\n        </Menu>\n        <Menu />\n      </div>\n    );\n  }\n  if (screen === 2) {\n    return (\n      <div>\n        <h4>Screen 2</h4>\n        <button ref={screen2ButtonFocusRef} onClick={() => setScreen(1)}>\n          Back to screen 1\n        </button>\n      </div>\n    );\n  }\n  return null;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"icons\"\n    }}>{`Icons`}</h3>\n    <p>{`If you add an icon to indicate to users the button is a dropdown menu, use `}<inlineCode parentName=\"p\">{`aria-hidden`}</inlineCode>{` on the icon. Screen readers will already announce to the user that the element is a dropdown menu; adding a label to your icon would be redundant.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<MenuButton>\n  Actions <span aria-hidden>▾</span>\n</MenuButton>\n`}</code></pre>\n    <p>{`However, if you have no text and only an icon, please make sure your icon has a screen reader friendly label:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// we'd rather it said \"Actions\" than\n// \"downward pointing triangle\"\n<MenuButton>\n  <span aria-label=\"Actions\">▾</span>\n</MenuButton>\n\n// add screen reader only text for svgs\nimport VisuallyHidden from \"@reach/visually-hidden\"\n<MenuButton>\n  <VisuallyHidden>Actions</VisuallyHidden>\n  <svg aria-hidden>\n    <polygon points=\"0,0 20,0 10,10 \" />\n  </svg>\n</MenuButton>\n\n// and your images an alt attribute\n<MenuButton>\n  <img src=\"gear.png\" alt=\"gear\"/>\n</MenuButton>\n\n// Or just label the button and hide everything\n<MenuButton aria-label=\"Actions\">\n  <span aria-hidden>\n    <TripleDots/>\n  </span>\n</MenuButton>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h3>\n    <p>{`You may want to pass your own click handler to a MenuButton, MenuItem or MenuLink that, in some cases, intercepts and prevents the default behavior from ocurring. You may think to do this by passing a handler to the `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{` prop:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Menu>\n  <MenuButton>Actions</MenuButton>\n  <MenuList>\n    <MenuItem\n      onClick={(event) => {\n        if (!userLoggedIn) {\n          event.preventDefault();\n          openDialog();\n        }\n      }}\n      onSelect={() => alert(\"Download\")}\n    >\n      Download\n    </MenuItem>\n  </MenuList>\n</Menu>\n`}</code></pre>\n    <p>{`This won't work because we actually do not call the `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{` handler to activate `}<inlineCode parentName=\"p\">{`Menu`}</inlineCode>{` or select `}<inlineCode parentName=\"p\">{`MenuItem`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`MenuLink`}</inlineCode>{` components. This is because a user may mouse down on a menu button, drag over a menu item and then select it by releasing the mouse trigger. A user may also start clicking one item, then drag to another item before `}<inlineCode parentName=\"p\">{`mouseup`}</inlineCode>{` to change their selectiion.`}</p>\n    <p>{`As such, events for each component look more like this:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MenuButton`}</inlineCode>{`: Activates `}<inlineCode parentName=\"li\">{`Menu`}</inlineCode>{` in `}<inlineCode parentName=\"li\">{`onMouseDown`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`onKeyDown`}</inlineCode>{` (`}<kbd>{`Enter`}</kbd>{` or `}<kbd>{`Spacebar`}</kbd>{` keys)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MenuItem`}</inlineCode>{`: Selects itself in `}<inlineCode parentName=\"li\">{`onMouseUp`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`onKeyDown`}</inlineCode>{` (`}<kbd>{`Enter`}</kbd>{` or `}<kbd>{`Spacebar`}</kbd>{` keys)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MenuLink`}</inlineCode>{`: Selects itself in `}<inlineCode parentName=\"li\">{`onMouseUp`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`onKeyDown`}</inlineCode>{` (`}<kbd>{`Enter`}</kbd>{` or `}<kbd>{`Spacebar`}</kbd>{` keys).`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`For `}<inlineCode parentName=\"li\">{`MenuLink`}</inlineCode>{`, the `}<inlineCode parentName=\"li\">{`click`}</inlineCode>{` event is fired after the selection events. So if you only need to intercept the event that triggers the anchor link, you can still use `}<inlineCode parentName=\"li\">{`onClick`}</inlineCode>{`, but the rest of the event handlers called in `}<inlineCode parentName=\"li\">{`MenuLink`}</inlineCode>{` will still be which means the `}<inlineCode parentName=\"li\">{`Menu`}</inlineCode>{` will close and your `}<inlineCode parentName=\"li\">{`onSelect`}</inlineCode>{` handler will be triggered.`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"keyboard-accessibility\"\n    }}>{`Keyboard Accessibility`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><kbd>{`Enter`}</kbd></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Open/close while focused on the `}<inlineCode parentName=\"td\">{`MenuButton`}</inlineCode>{`; Selects an item when navigating.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><kbd>{`Spacebar`}</kbd></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Open/close while focused on the `}<inlineCode parentName=\"td\">{`MenuButton`}</inlineCode>{`; Selects an item when navigating.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><kbd>{`ArrowUp`}</kbd></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Highlight previous item`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><kbd>{`ArrowDown`}</kbd></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Highlight next item`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><kbd>{`Home`}</kbd></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Highlight first item`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><kbd>{`End`}</kbd></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Highlight last item`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><kbd>{`Escape`}</kbd></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Close menu`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><kbd>{`Tab`}</kbd></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No effect`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type characters`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Highlights matching item`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport function TOC({ children, label = \"Table of Contents\", ...props }) {\n  return (\n    <nav className=\"toc\" {...props}>\n      <VisuallyHidden>\n        <h2>{label}</h2>\n      </VisuallyHidden>\n      {children}\n    </nav>\n  );\n}\n\nexport function TOCList({ children, style = {}, ...props }) {\n  return (\n    <ul\n      style={{\n        display: \"block\",\n        padding: 0,\n        listStyle: \"none\",\n        ...style\n      }}\n      {...props}\n    >\n      {children}\n    </ul>\n  );\n}\n\nexport function TOCLink({ href, children, ...props }) {\n  return (\n    <li style={{ display: \"inline-block\", margin: 0, padding: 0 }}>\n      <a href={href} {...props}>\n        {children}\n      </a>\n    </li>\n  );\n}\n"],"sourceRoot":""}
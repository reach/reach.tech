(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{HoBF:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n("zLVn"),i=(n("q1tI"),n("7ljp")),r=n("LmON"),o=n("EYWl"),c={},s={_frontmatter:c},d=r.a;function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)(d,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)(o.a,{title:"Auto ID",description:"Autogenerate IDs to facilitate WAI-ARIA and server rendering in React",mdxType:"SEO"}),Object(i.b)("h1",{id:"auto-id"},"Auto ID"),Object(i.b)("p",null,"Autogenerate IDs to facilitate WAI-ARIA and server rendering."),Object(i.b)("p",null,"A string can be supplied as an argument to be ",Object(i.b)("inlineCode",{parentName:"p"},"useId")," in lieu of the auto-generated ID. This is handy for accepting user-provided prop IDs that need to be deterministic."),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("p",null,"From the command line in your project directory, run ",Object(i.b)("inlineCode",{parentName:"p"},"npm install @reach/auto-id")," or ",Object(i.b)("inlineCode",{parentName:"p"},"yarn add @reach/auto-id"),". Then import the ",Object(i.b)("inlineCode",{parentName:"p"},"useId")," hook:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install @reach/auto-id\n# or\nyarn add @reach/auto-id\n")),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),'import { useId } from "@reach/auto-id";\n')),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),'import { useId } from "@reach/auto-id";\n\n// Pass in a user-supplied ID that will be used conditionally if provided\nconst id = useId(props.id);\n')))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-auto-id-mdx-a3942f56e7ff5e2b0c88.js.map
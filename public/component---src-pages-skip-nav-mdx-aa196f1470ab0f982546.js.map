{"version":3,"sources":["webpack:///./src/pages/skip-nav.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","description","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-skip-nav-mdx-aa196f1470ab0f982546.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/reach/reach-ui/website/src/components/mdx-layout.js\";\nimport SEO from \"../components/SEO\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <SEO title=\"Skip Nav\" description=\"Accessible skip-navigation-link React component for screen reader and keyboard users\" mdxType=\"SEO\" />\n    <h1 {...{\n      \"id\": \"skip-nav\"\n    }}>{`Skip Nav`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Source: `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/reach/reach-ui/tree/main/packages/skip-nav\"\n        }}>{`https://github.com/reach/reach-ui/tree/main/packages/skip-nav`}</a></li>\n      <li parentName=\"ul\">{`WAI-ARIA: `}<a parentName=\"li\" {...{\n          \"href\": \"https://webaim.org/techniques/skipnav/\"\n        }}>{`https://webaim.org/techniques/skipnav/`}</a></li>\n    </ul>\n    <p>{`Skip navigation link for screen reader and keyboard users. Because the main content is not usually the first thing in the document, it's valuable to provide a shortcut for keyboard and screen reader users to skip to the content.`}</p>\n    <p>{`If the user does not navigate with the keyboard, they won't see the link.`}</p>\n    <p>{`For a demo, click some empty space on this page to move focus to the document body, then hit the \"tab\" key You'll see the link pop up. Hit enter, then tab again. Rather than cycling through the navigation, you are tabbing through the main content of the page.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`ReactDOM.render(\n  <React.Fragment>\n    {/* put the link at the top of your app */}\n    <SkipNavLink />\n    <div>\n      <YourNav />\n      {/* and the content next to your main content */}\n      <SkipNavContent />\n      <YourMainContent />\n    </div>\n  </React.Fragment>,\n  rootNode\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`From the command line in your project directory, run `}<inlineCode parentName=\"p\">{`npm install @reach/skip-nav`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn add @reach/skip-nav`}</inlineCode>{`. Then import the components and styles:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @reach/skip-nav\n# or\nyarn add @reach/skip-nav\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { SkipNavLink, SkipNavContent } from \"@reach/skip-nav\";\nimport \"@reach/skip-nav/styles.css\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-api\"\n    }}>{`Component API`}</h2>\n    <h3 {...{\n      \"id\": \"skipnavlink\"\n    }}>{`SkipNavLink`}</h3>\n    <p>{`Renders a link that remains hidden until focused to skip to the main content.`}</p>\n    <h4 {...{\n      \"id\": \"skipnavlink-css-selectors\"\n    }}>{`SkipNavLink CSS Selectors`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-skip-link] {\n}\n[data-reach-skip-link]:focus {\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"skipnavlink-props\"\n    }}>{`SkipNavLink Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#skipnavlink-anchor-props\"\n            }}><inlineCode parentName=\"a\">{`a`}</inlineCode>{` props`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Cool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#skipnavlink-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"skipnavlink-anchor-props\"\n    }}>{`SkipNavLink anchor props`}</h5>\n    <p>{`Element props are spread to the underlying link.`}</p>\n    <h5 {...{\n      \"id\": \"skipnavlink-children\"\n    }}>{`SkipNavLink children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children?: React.ReactNode`}</inlineCode></p>\n    <p>{`Allows you to change the text for your preferred phrase or localization. If no children are passed, the link will display `}<inlineCode parentName=\"p\">{`Skip to content`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SkipNavLink>saltar al contenido</SkipNavLink>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"skipnavcontent\"\n    }}>{`SkipNavContent`}</h3>\n    <p>{`Renders a div as the target for the link.`}</p>\n    <h4 {...{\n      \"id\": \"skipnavlink-props-1\"\n    }}>{`SkipNavLink Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#skipnavcontent-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"skipnavlink-children-1\"\n    }}>{`SkipNavLink children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children?: React.ReactNode`}</inlineCode></p>\n    <p>{`You can place the `}<inlineCode parentName=\"p\">{`SkipNavContent`}</inlineCode>{` element as a sibling to your main content or as a wrapper:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SkipNavContent />\n<YourMainContent />\n\n// or\n\n<SkipNavContent>\n  <YourMainContent />\n</SkipNavContent>\n`}</code></pre>\n    <p>{`Keep in mind it renders a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`, so it may mess affect your page styles depending on where it’s placed.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"./src/markdown/pages/accessibility.md":function(e,o,t){"use strict";t.r(o),t.d(o,"title",function(){return a});var n=t("./node_modules/react/index.js"),i=t.n(n);const a="Accessibility";o.default=function(){return i.a.createElement("div",{className:"markdown",dangerouslySetInnerHTML:{__html:"<h1>Accessibility</h1>\n<p>Accessibility is a first-class concern for Reach Router, so, naturally, it’s baked in.</p>\n<h2>Links</h2>\n<p>Links in a client rendered app should behave just like links in a server rendered app. Reach Router does this automatically for you:</p>\n<ul>\n<li>Keyboard access</li>\n<li>Assistive devices announce correctly</li>\n<li>Command/Control click opens in a new tab</li>\n<li>Right click “open in new window” opens in a new window</li>\n</ul>\n<h2>Focus Management</h2>\n<p>Whenever the content of a page changes in response to a user interaction, the focus should be moved to that content; otherwise, users on assistive devices have to search around the page to find what changed–yuck! Without the help of a router, managing focus on route transitions requires a lot effort and knowledge on your part.</p>\n<p>Reach Router provides out-of-the-box focus management so your apps are significantly more accessible without you breaking a sweat.</p>\n<p>When the location changes, the top-most part of your application that changed is identified and focus is moved to it.</p>\n<h2>Focus Management</h2>\n<p>Prior to version <code>1.3</code>, we used <code>role=&quot;group&quot;</code> on the top-level element so that screen readers would announce to the user the focused group’s nested elements similarly to how it works when a user loads a page for the first time. A problem we found is that some screen readers (notably VoiceOver and NVDA with Firefox) will read the group’s content as if it’s a long string, void of any important context provided by the interior markup.</p>\n<p>While we removed the group role as the router’s default setting, if you believe the group role creates a better experience for your application you can still pass it as a prop to the <code>Router</code> component and it will be forwarded to the top-level element and function the same as before.</p>\n"}})}}}]);
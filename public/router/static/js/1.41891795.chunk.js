(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"./src/markdown/tutorial/09-navigate.md":function(n,a,s){"use strict";s.r(a),s.d(a,"title",function(){return o});var t=s("./node_modules/react/index.js"),p=s.n(t);const o="Tutorial - Navigating Imperatively";a.default=function(){return p.a.createElement("div",{className:"markdown",dangerouslySetInnerHTML:{__html:'<h1>Tutorial - Navigating Imperatively</h1>\n<p>Sometimes you need to navigate in response to something other than the user clicking on a link. For this we have <code>navigate</code>. Let’s import <code>navigate</code>.</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  Router<span class="token punctuation">,</span>\n  Link<span class="token punctuation">,</span>\n  navigate\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@reach/router"</span>\n</code></pre>\n<p>Probably the most common reason to use <code>navigate</code> is a form submission. Perhaps the user submits a form, you save some data, and then navigate to the record. Let’s add this form to <code>Invoices</code>:</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> <span class="token function-variable function">Invoices</span> <span class="token operator">=</span> props <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">{</span><span class="token comment">/* ... */</span><span class="token punctuation">}</span>\n\n    <span class="token operator">&lt;</span>form\n      onSubmit<span class="token operator">=</span><span class="token punctuation">{</span>event <span class="token operator">=></span> <span class="token punctuation">{</span>\n        event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> id <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>elements<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value\n        event<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n        <span class="token comment">// pretend like we saved a record to the DB here</span>\n        <span class="token comment">// and then we navigate imperatively</span>\n        <span class="token function">navigate</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`/invoices/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>\n          New <span class="token class-name">Invoice</span> <span class="token constant">ID</span><span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>create<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>\n\n    <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>\n</code></pre>\n<p>Go ahead and submit the form and watch the router navigate to the new invoice.</p>\n<p>Oh, one more thing. Route Components get a <code>navigate</code> prop. This version of the function is aware of its position in the hierarchy. This means you can navigate to relative paths the same way you can link to them.</p>\n<p>Go ahead and remove the spot where we imported navigate and let’s use the prop instead:</p>\n<pre><code class="language-jsx"><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`/invoices/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span>\n<span class="token comment">// becomes</span>\nprops<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n</code></pre>\n'}})}}}]);
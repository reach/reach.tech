(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/markdown/tutorial/05-url-parameters.md":function(n,a,s){"use strict";s.r(a),s.d(a,"title",function(){return e});var t=s("./node_modules/react/index.js"),p=s.n(t);const e="Tutorial - URL Parameters";a.default=function(){return p.a.createElement("div",{className:"markdown",dangerouslySetInnerHTML:{__html:'<h1>Tutorial - URL Parameters</h1>\n<p>Let’s create another screen called <code>Invoice</code>. It expects a prop called <code>invoiceId</code>. You can imagine it being rendered like <code>&lt;Invoice invoiceId=&quot;abc&quot;/&gt;</code>.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> <span class="token function-variable function">Invoice</span> <span class="token operator">=</span> props <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Invoice <span class="token punctuation">{</span>props<span class="token punctuation">.</span>invoiceId<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>\n</code></pre>\n<p>Next add it to the <code>&lt;Router&gt;</code>. Note the path. That <code>:invoiceId</code> is called a “URL Parameter”. You’ll see what it does next.</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Invoice</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>invoices/:invoiceId<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token punctuation">{</span><span class="token comment">/*...*/</span><span class="token punctuation">}</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>Finally, link to the new route somewhere.</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>invoices/123<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Invoice <span class="token number">123</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>invoices/abc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Invoice <span class="token constant">ABC</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>The name of the url parameter (<code>:invoiceId</code>) becomes a prop by the same name on your route component (<code>props.invoiceId</code>). It gets parsed from the URL and passed to you.</p>\n<p>Besides using it to render, it’s common to use that prop in <code>componentDidMount</code> to fetch some data.</p>\n'}})}}}]);
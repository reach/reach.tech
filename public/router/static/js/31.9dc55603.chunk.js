(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"./src/markdown/api/Redirect.md":function(n,a,s){"use strict";s.r(a),s.d(a,"title",function(){return e});var t=s("./node_modules/react/index.js"),p=s.n(t);const e="Redirect";a.default=function(){return p.a.createElement("div",{className:"markdown",dangerouslySetInnerHTML:{__html:'<h1>Redirect</h1>\n<p>Redirects from one path to another. Use this when you want to change a URL without breaking links to the old path.</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span> <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>aboutus<span class="token punctuation">"</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>about-us<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AboutUs</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>about-us<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span>\n    <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users/:userId<span class="token punctuation">"</span></span>\n    <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>profile/:userId<span class="token punctuation">"</span></span>\n  <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Profile</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>profile/:userId<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>It doesn’t have to be a child of a Router, it can also be rendered anywhere in your app when you want to declaratively redirect.</p>\n<pre><code class="language-jsx"><span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    user<span class="token punctuation">:</span> <span class="token keyword">null</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">async</span> <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>hasBetaEnabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/all/new/stuff<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NormalPage</span> <span class="token punctuation">/></span></span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2>from: string</h2>\n<p>Only used when rendered inside of a <code>&lt;Router&gt;</code>. This indicates which path to redirect from, note the parameters must match the <code>to</code> prop’s parameters.</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span>\n  <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users/:userId<span class="token punctuation">"</span></span>\n  <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>profile/:userId<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre>\n<h2>to: string</h2>\n<p>This indicates which path to redirect to, note the parameters must match the <code>from</code> prop’s parameters.</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span>\n  <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users/:userId<span class="token punctuation">"</span></span>\n  <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>profile/:userId<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre>\n<h2>noThrow</h2>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span> <span class="token attr-name">noThrow</span> <span class="token punctuation">/></span></span>\n</code></pre>\n<p>Redirect works with <code>componentDidCatch</code> to prevent the tree from rendering and starts over with a new location.</p>\n<p>Because React doesn’t swallow the error this might bother you. For example, a redirect will trigger Create React App’s error overlay. In production, everything is fine. If it bothers you, add <code>noThrow</code> and Redirect will do redirect without using <code>componentDidCatch</code>.</p>\n<p>If you’re using React &lt; 16 Redirect will not throw at all, regardless of what value you put for this prop.</p>\n<p>If you’re using <code>componentDidCatch</code> in your app please read the <a href="isRedirect">isRedirect</a> doc!</p>\n'}})}}}]);
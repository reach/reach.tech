{"version":3,"sources":["webpack:///./src/pages/rect.mdx","webpack:///./src/components/TOC.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","description","href","parentName","isMDXComponent","TOC","children","label","className","TOCList","style","display","padding","listStyle","TOCLink","margin"],"mappings":"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","file":"component---src-pages-rect-mdx-3306e755ad9e8d3f899b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/reach/reach-ui/website/src/components/mdx-layout.js\";\nimport SEO from \"../components/SEO\";\nimport { TOC, TOCList, TOCLink } from \"../components/TOC\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <SEO title=\"Rect\" description=\"Measures a DOM node's bounding box in React\" mdxType=\"SEO\" />\n    <h1 {...{\n      \"id\": \"rect\"\n    }}>{`Rect`}</h1>\n    <TOC mdxType=\"TOC\">\n  <TOCList mdxType=\"TOCList\">\n    <TOCLink href=\"#userect\" mdxType=\"TOCLink\">useRect</TOCLink>\n    <TOCLink href=\"#rect-1\" mdxType=\"TOCLink\">Rect</TOCLink>\n  </TOCList>\n    </TOC>\n    <p>{`Measures DOM elements (aka. bounding client rect). See also `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\"\n      }}>{`Element.getBoundingClientRect()`}</a></p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`From the command line in your project directory, run `}<inlineCode parentName=\"p\">{`npm install @reach/rect`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn add @reach/rect`}</inlineCode>{`. Then import the component or hook that you need:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @reach/rect\n# or\nyarn add @reach/rect\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Rect, { useRect } from \"@reach/rect\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-api\"\n    }}>{`Component API`}</h2>\n    <h3 {...{\n      \"id\": \"userect\"\n    }}>{`useRect`}</h3>\n    <p><inlineCode parentName=\"p\">{`function useRect<T extends Element>(nodeRef: React.RefObject<T>, options?: { observe?: boolean, onChange?: (rect: DOMRect) => void }): null | DOMRect`}</inlineCode></p>\n    <p>{`Hook that observes and returns the measurements (ClientRect) of a DOM element. Pass it the ref that is placed on the element to be measured.`}</p>\n    <h4 {...{\n      \"id\": \"userect-options\"\n    }}>{`useRect Options`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Option`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#userect-observe\"\n            }}><inlineCode parentName=\"a\">{`observe`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`bool`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#userect-onchange\"\n            }}><inlineCode parentName=\"a\">{`onChange`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"userect-observe\"\n    }}>{`useRect observe`}</h5>\n    <p>{`Tells `}<inlineCode parentName=\"p\">{`useRect`}</inlineCode>{` whether or not to observe changes to the position of the node. Defaults to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`.`}</p>\n    <p>{`This is typically used for elements that pop over other elements. You generally don't need to observe all of the timeâ€”only when the popup is active.`}</p>\n    <p>{`If `}<inlineCode parentName=\"p\">{`observe`}</inlineCode>{` is false, the element's `}<inlineCode parentName=\"p\">{`DOMRect`}</inlineCode>{` will no longer be observed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  const [observe, setObserve] = React.useState(true);\n  // your own ref\n  const ref = React.useRef();\n\n  // pass it in to be observered\n  const rect = useRect(ref, { observe });\n\n  return (\n    <div>\n      <button onClick={() => setObserve(!observe)}>\n        {observe ? \"Stop\" : \"Start\"} observing\n      </button>\n      <pre>{JSON.stringify(rect, null, 2)}</pre>\n      <div\n        // and then place the ref\n        ref={ref}\n        contentEditable\n        style={{\n          display: \"inline-block\",\n          padding: 10,\n          border: \"solid 1px\",\n        }}\n        dangerouslySetInnerHTML={{\n          __html: \"Edit this to change the size!\",\n        }}\n      />\n    </div>\n  );\n}\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"userect-onchange\"\n    }}>{`useRect onChange`}</h5>\n    <p><inlineCode parentName=\"p\">{`onChange?(rect: DOMRect): void`}</inlineCode></p>\n    <p>{`Calls back whenever the `}<inlineCode parentName=\"p\">{`rect`}</inlineCode>{` of the element changes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function Example() {\n  const ref = React.useRef();\n  useRect(ref, {\n    onChange(rect) {\n      console.log(rect);\n    },\n  });\n  return <div ref={ref} />;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"rect-1\"\n    }}>{`Rect`}</h3>\n    <p>{`Render prop component for use in class components to observe element measurements.`}</p>\n    <h4 {...{\n      \"id\": \"rect-props\"\n    }}>{`Rect Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#rect-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#rect-observe\"\n            }}><inlineCode parentName=\"a\">{`observe`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`bool`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#rect-onchange\"\n            }}><inlineCode parentName=\"a\">{`onChange`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"rect-children\"\n    }}>{`Rect children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children(args: { rect: DOMRect | null; ref: React.Ref<any> }): JSX.Element`}</inlineCode></p>\n    <p>{`A function that calls back to you with a `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{` to place on an element and the `}<inlineCode parentName=\"p\">{`rect`}</inlineCode>{` measurements of the dom node.`}</p>\n    <p><strong parentName=\"p\">{`Note`}</strong>{`: On the first render `}<inlineCode parentName=\"p\">{`rect`}</inlineCode>{` will be `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` because we can't measure a node that has not yet been rendered. Make sure your code accounts for this.`}</p>\n    <h5 {...{\n      \"id\": \"rect-observe\"\n    }}>{`Rect observe`}</h5>\n    <p><inlineCode parentName=\"p\">{`observe?: boolean`}</inlineCode></p>\n    <p>{`Same as `}<a parentName=\"p\" {...{\n        \"href\": \"#userect-observe\"\n      }}><inlineCode parentName=\"a\">{`useRect`}</inlineCode>{`'s `}<inlineCode parentName=\"a\">{`observe`}</inlineCode>{` option`}</a>{`. While observing, the `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` render prop may call back very quickly (especially while scrolling), so it can be important for performance to avoid observing when you don't need to. Defaults to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Rect observe={false}>\n  {({ rect, ref }) => (\n    <div ref={ref}>\n      <div>Will not measure the element when false</div>\n      <div>\n        Edit this code and change it to <code>true</code>\n      </div>\n      <pre>{JSON.stringify(rect, null, 2)}</pre>\n    </div>\n  )}\n</Rect>\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"rect-onchange\"\n    }}>{`Rect onChange`}</h5>\n    <p><inlineCode parentName=\"p\">{`onChange?(rect: DOMRect): void`}</inlineCode></p>\n    <p>{`Same as `}<a parentName=\"p\" {...{\n        \"href\": \"#userect-onchange\"\n      }}><inlineCode parentName=\"a\">{`useRect`}</inlineCode>{`'s `}<inlineCode parentName=\"a\">{`onChange`}</inlineCode>{` option`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Rect onChange={rect => console.log(rect)}/>\n  {({ rect, ref }) => (\n    <div ref={ref}/>\n  )}\n</Rect>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport function TOC({ children, label = \"Table of Contents\", ...props }) {\n  return (\n    <nav className=\"toc\" {...props}>\n      <VisuallyHidden>\n        <h2>{label}</h2>\n      </VisuallyHidden>\n      {children}\n    </nav>\n  );\n}\n\nexport function TOCList({ children, style = {}, ...props }) {\n  return (\n    <ul\n      style={{\n        display: \"block\",\n        padding: 0,\n        listStyle: \"none\",\n        ...style,\n      }}\n      {...props}\n    >\n      {children}\n    </ul>\n  );\n}\n\nexport function TOCLink({ href, children, ...props }) {\n  return (\n    <li style={{ display: \"inline-block\", margin: 0, padding: 0 }}>\n      <a href={href} {...props}>\n        {children}\n      </a>\n    </li>\n  );\n}\n"],"sourceRoot":""}
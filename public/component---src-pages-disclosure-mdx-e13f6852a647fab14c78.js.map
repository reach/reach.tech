{"version":3,"sources":["webpack:///./src/pages/disclosure.mdx","webpack:///./src/components/TOC.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","description","href","parentName","isMDXComponent","TOC","children","label","className","TOCList","style","display","padding","listStyle","TOCLink","margin"],"mappings":"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","file":"component---src-pages-disclosure-mdx-e13f6852a647fab14c78.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/reach/reach-ui/website/src/components/mdx-layout.js\";\nimport SEO from \"../components/SEO\";\nimport { TOC, TOCList, TOCLink } from \"../components/TOC\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <SEO title=\"Disclosure\" description=\"Accessible disclosure component for React\" mdxType=\"SEO\" />\n    <h1 {...{\n      \"id\": \"disclosure\"\n    }}>{`Disclosure`}</h1>\n    <TOC mdxType=\"TOC\">\n  <TOCList mdxType=\"TOCList\">\n    <TOCLink href=\"#disclosure-1\" mdxType=\"TOCLink\">Disclosure</TOCLink>\n    <TOCLink href=\"#disclosurebutton\" mdxType=\"TOCLink\">DisclosureButton</TOCLink>\n    <TOCLink href=\"#disclosurepanel\" mdxType=\"TOCLink\">DisclosurePanel</TOCLink>\n  </TOCList>\n    </TOC>\n    <ul>\n      <li parentName=\"ul\">{`Source: `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/reach/reach-ui/tree/main/packages/disclosure\"\n        }}>{`https://github.com/reach/reach-ui/tree/main/packages/disclosure`}</a></li>\n      <li parentName=\"ul\">{`WAI-ARIA: `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\"\n        }}>{`https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure`}</a></li>\n    </ul>\n    <p>{`A disclosure is a button that controls the visibility of a panel of content. When the content inside the panel is hidden, it is often styled as a typical push button with a right-pointing arrow or triangle to hint that activating the button will display additional content. When the content is visible, the arrow or triangle typically points down.`}</p>\n    <p>{`If you have a group of disclosures that stack vertically and exist within the same logical context, you may want to use `}<a parentName=\"p\" {...{\n        \"href\": \"/reach-ui/accordion\"\n      }}><inlineCode parentName=\"a\">{`@reach/accordion`}</inlineCode></a>{` instead.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`From the command line in your project directory, run `}<inlineCode parentName=\"p\">{`npm install @reach/disclosure`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn add @reach/disclosure`}</inlineCode>{`. Then import the components that you need:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @reach/disclosure\n# or\nyarn add @reach/disclosure\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import {\n  Disclosure,\n  DisclosureButton,\n  DisclosurePanel,\n} from \"@reach/disclosure\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// jsx-demo\nfunction Example() {\n  return (\n    <Disclosure>\n      <DisclosureButton>Find out what lies beneath</DisclosureButton>\n      <DisclosurePanel>Here I am! I am the buried treasure!</DisclosurePanel>\n    </Disclosure>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-api\"\n    }}>{`Component API`}</h2>\n    <h3 {...{\n      \"id\": \"disclosure-1\"\n    }}>{`Disclosure`}</h3>\n    <p>{`The wrapper component and context provider for a disclosure's button and panel components. A disclosure should never have more than one button or panel descendants.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Disclosure>\n  <DisclosureButton>Do a thing</DisclosureButton>\n  <DisclosurePanel>...</DisclosurePanel>\n</Disclosure>\n`}</code></pre>\n    <p>{`It is important to note that the `}<inlineCode parentName=\"p\">{`Disclosure`}</inlineCode>{` component doesn't actually render a DOM node, so there is no way to add styles to a disclosure wrapper directly. If you want your disclosure to have a wrapper element you can nest one directly.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Disclosure>\n  <div style={{ padding: 10 }}>\n    <DisclosureButton>Do a thing</DisclosureButton>\n    <DisclosurePanel>...</DisclosurePanel>\n  </div>\n</Disclosure>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"controlled-disclosure\"\n    }}>{`Controlled Disclosure`}</h4>\n    <p>{`If you want to control the disclosure's value, you can do so by passing `}<a parentName=\"p\" {...{\n        \"href\": \"#disclosure-open\"\n      }}><inlineCode parentName=\"a\">{`open`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"#disclosure-onchange\"\n      }}><inlineCode parentName=\"a\">{`onChange`}</inlineCode></a>{` props.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const [isOpen, setOpen] = useState(false);\nreturn (\n  <Disclosure open={isOpen} onChange={() => setOpen(!isOpen)}>\n    <DisclosureButton />\n    <DisclosurePanel />\n  </Disclosure>\n);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"disclosure-props\"\n    }}>{`Disclosure Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#disclosure-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#disclosure-defaultopen\"\n            }}><inlineCode parentName=\"a\">{`defaultOpen`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#disclosure-id\"\n            }}><inlineCode parentName=\"a\">{`id`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#disclosure-onchange\"\n            }}><inlineCode parentName=\"a\">{`onChange`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#disclosure-open\"\n            }}><inlineCode parentName=\"a\">{`open`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"disclosure-children\"\n    }}>{`Disclosure children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode`}</inlineCode></p>\n    <p><inlineCode parentName=\"p\">{`Disclosure`}</inlineCode>{` expects to receive accept `}<inlineCode parentName=\"p\">{`DisclosureButton`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`DisclosurePanel`}</inlineCode>{` components as either direct children or descendants. It can also accept wrapper elements if desired, though it is not recommended to pass other arbitrary components within a disclosure in most cases.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<div>\n  {/* OK! */}\n  <Disclosure>\n    <DisclosureButton>Click Me</DisclosureButton>\n    <DisclosurePanel>Collapse or open this content!</DisclosurePanel>\n  </Disclosure>\n\n  {/* Also OK! */}\n  <Disclosure>\n    <div>\n      <DisclosureButton>Click Me</DisclosureButton>\n      <DisclosurePanel>Collapse or open this content!</DisclosurePanel>\n    </div>\n  </Disclosure>\n\n  {/* Probably confusing, you should avoid! */}\n  <Disclosure>\n    <div>Mary had a little lamb, little lamb, blah blah blah</div>\n    <DisclosureButton>Click Me</DisclosureButton>\n    <DisclosurePanel>Collapse or open this content!</DisclosurePanel>\n    <blockquote>You miss 100% of the shots you don't take</blockquote>\n  </Disclosure>\n</div>\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"disclosure-defaultopen\"\n    }}>{`Disclosure defaultOpen`}</h5>\n    <p><inlineCode parentName=\"p\">{`defaultOpen?: boolean`}</inlineCode></p>\n    <p>{`Whether or not an uncontrolled disclosure component should default to its `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` state on the initial render. Defaults to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n    <h5 {...{\n      \"id\": \"disclosure-id\"\n    }}>{`Disclosure id`}</h5>\n    <p><inlineCode parentName=\"p\">{`id?: string | number`}</inlineCode></p>\n    <p>{`An id used to assign aria and id attributes to nested `}<inlineCode parentName=\"p\">{`DisclosureButton`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`DisclosurePanel`}</inlineCode>{` components.`}</p>\n    <p>{`Since the Disclosure component itself does not render a DOM element, an `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` prop will not appear in the DOM directly as may be expected. Rather, we need to generate IDs for the panel and button based on a disclosure ID for aria compliance. If no `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` is passed we will generate descendant IDs for you.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Disclosure id=\"awesome-disclosure\">\n  <div>\n    {\" \"}\n    {/* no ID passed here! */}\n    <DisclosureButton /> {/* <button id=\"awesome-disclosure--button\" /> */}\n    <DisclosurePanel /> {/* <div id=\"awesome-disclosure--panel\" /> */}\n  </div>\n</Disclosure>\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"disclosure-onchange\"\n    }}>{`Disclosure onChange`}</h5>\n    <p><inlineCode parentName=\"p\">{`onChange?: () => void`}</inlineCode></p>\n    <p>{`The callback that is fired when a disclosure's open state is changed.`}</p>\n    <h5 {...{\n      \"id\": \"disclosure-open\"\n    }}>{`Disclosure open`}</h5>\n    <p><inlineCode parentName=\"p\">{`open?: boolean`}</inlineCode></p>\n    <p>{`The controlled open state of the disclosure. The `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` prop should be used along with `}<inlineCode parentName=\"p\">{`onChange`}</inlineCode>{` to create controlled disclosure components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const [open, setOpen] = useState(false);\nreturn (\n  <Disclosure open={open} onChange={() => setOpen(!open)}>\n    <DisclosureButton>I have a secret</DisclosureButton>\n    <DisclosurePanel>\n      Ante rhoncus facilisis iaculis nostra faucibus vehicula ac consectetur\n      pretium, lacus nunc consequat id viverra facilisi ligula eleifend, congue\n      gravida malesuada proin scelerisque luctus est convallis.\n    </DisclosurePanel>\n  </Disclosure>\n);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"disclosurebutton\"\n    }}>{`DisclosureButton`}</h3>\n    <p>{`The trigger button a user clicks to interact with a disclosure.`}</p>\n    <h4 {...{\n      \"id\": \"disclosurebutton-css-selectors\"\n    }}>{`DisclosureButton CSS Selectors`}</h4>\n    <p>{`Please see the `}<a parentName=\"p\" {...{\n        \"href\": \"/reach-ui/styling\"\n      }}>{`styling guide`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-disclosure-button] {\n}\n[data-reach-disclosure-button][data-state=\"open\"] {\n}\n[data-reach-disclosure-button][data-state=\"collapsed\"] {\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"disclosurebutton-props\"\n    }}>{`DisclosureButton Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#disclosurebutton-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"disclosurebutton-children\"\n    }}>{`DisclosureButton children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode`}</inlineCode></p>\n    <p>{`Typically a text string that serves as a label for the disclosure button, though nested DOM nodes can be passed as well so long as they are valid children of interactive elements.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Further reading:`}</strong>{` `}<a parentName=\"li\" {...{\n          \"href\": \"https://adrianroselli.com/2016/12/be-wary-of-nesting-roles.html\"\n        }}><em parentName=\"a\">{`Be Wary of Nesting Roles`}</em>{` by Adrian Roselli`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"disclosurepanel\"\n    }}>{`DisclosurePanel`}</h3>\n    <p>{`The collapsible panel in which inner content for a disclosure item is rendered.`}</p>\n    <h4 {...{\n      \"id\": \"disclosurepanel-css-selectors\"\n    }}>{`DisclosurePanel CSS Selectors`}</h4>\n    <p>{`Please see the `}<a parentName=\"p\" {...{\n        \"href\": \"/reach-ui/styling\"\n      }}>{`styling guide`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`[data-reach-disclosure-panel] {\n}\n[data-reach-disclosure-panel][data-state=\"open\"] {\n}\n[data-reach-disclosure-panel][data-state=\"collapsed\"] {\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"disclosurepanel-props\"\n    }}>{`DisclosurePanel Props`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Required`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"#disclosurepanel-children\"\n            }}><inlineCode parentName=\"a\">{`children`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`node`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 {...{\n      \"id\": \"disclosurepanel-children\"\n    }}>{`DisclosurePanel children`}</h5>\n    <p><inlineCode parentName=\"p\">{`children: React.ReactNode`}</inlineCode></p>\n    <p>{`Inner collapsible content for the disclosure item.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\n\nexport function TOC({ children, label = \"Table of Contents\", ...props }) {\n  return (\n    <nav className=\"toc\" {...props}>\n      <VisuallyHidden>\n        <h2>{label}</h2>\n      </VisuallyHidden>\n      {children}\n    </nav>\n  );\n}\n\nexport function TOCList({ children, style = {}, ...props }) {\n  return (\n    <ul\n      style={{\n        display: \"block\",\n        padding: 0,\n        listStyle: \"none\",\n        ...style\n      }}\n      {...props}\n    >\n      {children}\n    </ul>\n  );\n}\n\nexport function TOCLink({ href, children, ...props }) {\n  return (\n    <li style={{ display: \"inline-block\", margin: 0, padding: 0 }}>\n      <a href={href} {...props}>\n        {children}\n      </a>\n    </li>\n  );\n}\n"],"sourceRoot":""}
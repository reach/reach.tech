{"version":3,"sources":["webpack:///./src/pages/auto-id.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","description","parentName","isMDXComponent"],"mappings":"4RAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAKC,MAAM,UAAUC,YAAY,wEAAwEF,QAAQ,QACjH,iBAAQ,CACN,GAAM,WADR,WAGA,sFACA,sEAAqD,0BAAYG,WAAW,KAAvB,SAArD,wHACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,6EAA4D,0BAAYA,WAAW,KAAvB,8BAA5D,OAA0I,0BAAYA,WAAW,KAAvB,2BAA1I,qBAAmO,0BAAYA,WAAW,KAAvB,SAAnO,UACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gEAML,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,8CAIL,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yJAWTN,EAAWO,gBAAiB","file":"component---src-pages-auto-id-mdx-ab56c53ac2f4acabed06.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/reach/reach-ui/website/src/components/mdx-layout.js\";\nimport SEO from \"../components/SEO\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <SEO title=\"Auto ID\" description=\"Autogenerate IDs to facilitate WAI-ARIA and server rendering in React\" mdxType=\"SEO\" />\n    <h1 {...{\n      \"id\": \"auto-id\"\n    }}>{`Auto ID`}</h1>\n    <p>{`Autogenerate IDs to facilitate WAI-ARIA and server rendering.`}</p>\n    <p>{`A string can be supplied as an argument to be `}<inlineCode parentName=\"p\">{`useId`}</inlineCode>{` in lieu of the auto-generated ID. This is handy for accepting user-provided prop IDs that need to be deterministic.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`From the command line in your project directory, run `}<inlineCode parentName=\"p\">{`npm install @reach/auto-id`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn add @reach/auto-id`}</inlineCode>{`. Then import the `}<inlineCode parentName=\"p\">{`useId`}</inlineCode>{` hook:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @reach/auto-id\n# or\nyarn add @reach/auto-id\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { useId } from \"@reach/auto-id\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { useId } from \"@reach/auto-id\";\n\n// Pass in a user-supplied ID that will be used conditionally if provided\nconst id = useId(props.id);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}